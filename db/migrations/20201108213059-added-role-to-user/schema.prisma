// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "sqlite"
  url = "***"
}

generator client {
  provider = "prisma-client-js"
}

// --------------------------------------
model Session {
  id                 Int       @id @default(autoincrement())
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  expiresAt          DateTime?
  handle             String    @unique
  user               User?     @relation(fields: [userId], references: [id])
  userId             Int?
  hashedSessionToken String?
  antiCSRFToken      String?
  publicData         String?
  privateData        String?
}

model User {
  id             Int        @id @default(autoincrement())
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  sessions       Session[]
  role           String     @default("user")
  avatar         String?
  email          String     @unique
  hashedPassword String?
  name           String
  surname        String
  birthDate      DateTime
  bio            String?
  position       Position[]
  createdTasks   Task[]     @relation("createdTask")
  tasksInCharge  Task[]
  // dialogs        Dialog[]
  // posts            Post[]
  // news             News[]
  // propositions     Proposition[]
  // rate             Rate
  // salary           Salary
  // promotion        Promotion
  // workingTime      WorkingTime
  // address          Address
  // requiredSupplies Supply[]
}

model Position {
  id     Int    @id @default(autoincrement())
  name   String
  user   User?  @relation(fields: [userId], references: [id])
  userId Int?
}

model Task {
  id            Int      @id @default(autoincrement())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  title         String
  description   String
  deadline      DateTime
  completion    Float
  completed     Boolean
  creator       User?    @relation("createdTask", fields: [creatorId], references: [id])
  creatorId     Int?
  usersInCharge User[]
}
